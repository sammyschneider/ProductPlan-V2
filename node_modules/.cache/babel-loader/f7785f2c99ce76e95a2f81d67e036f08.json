{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/SammySchneider/dev/noa/sammys-interview/productplan-candidate-hw/src/Tutorial.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { RoadmapContext } from \"./RoadmapState\";\nimport \"./Tutorial.scss\";\nimport { Popover } from \"./Popover\";\nimport { PrimaryButton } from \"./PrimaryButton\";\nimport useTimeout from \"use-timeout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nexport function Tutorial() {\n  _s();\n\n  const [step, setStep] = React.useState(\"notStarted\");\n  const [showPopover, setShowPopover] = React.useState(true);\n  const {\n    state\n  } = React.useContext(RoadmapContext); // Wait two seconds before initiating the tutorial\n\n  useTimeout(() => {\n    setStep(\"createLane\");\n  }, 2000); // Detect when to move to the next step\n\n  React.useEffect(() => {\n    switch (step) {\n      case \"createLane\":\n        {\n          if (state.lanes.length > 0) {\n            setStep(\"createBar\");\n            setShowPopover(true);\n          }\n\n          break;\n        }\n\n      case \"createBar\":\n        {\n          if (state.lanes.some(lane => lane.rows.some(row => row.bars.length > 0))) {\n            setStep(\"createMoreBars\");\n            setShowPopover(true);\n          }\n\n          break;\n        }\n\n      case \"createMoreBars\":\n        {\n          let barCount = 0;\n\n          for (let lane of state.lanes) {\n            for (let row of lane.rows) {\n              barCount += row.bars.length;\n            }\n          }\n\n          if (barCount > 2) {\n            setStep(\"done\");\n          }\n\n          break;\n        }\n\n      default:\n        {}\n    }\n  }, [state.lanes, step]);\n  const dismissPopover = React.useCallback(() => {\n    setShowPopover(false);\n  }, []);\n\n  if (!showPopover) {\n    return null;\n  }\n\n  switch (step) {\n    case \"createLane\":\n      {\n        return /*#__PURE__*/_jsxDEV(TutorialPopover, {\n          selector: \".add-lane-button\",\n          closeAction: dismissPopover,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"We'll start with a lane.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Lanes represent high level categories, such as teams, product lines, or strategic initiatives. Add a color and a description to your lane to communicate valuable details to stakeholders.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag and drop a lane to get started.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this);\n      }\n\n    case \"createBar\":\n      {\n        return /*#__PURE__*/_jsxDEV(TutorialPopover, {\n          selector: \".add-bar-button\",\n          closeAction: dismissPopover,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Awesome! Now lets add a few bars.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Bars are your specific initiative. Use them to represent your epics, projects, or tasks, and provide an at a glance view of priority, relationships, and progress.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag and drop a bar to get started.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this);\n      }\n\n    case \"createMoreBars\":\n      {\n        return /*#__PURE__*/_jsxDEV(TutorialPopover, {\n          selector: \".add-bar-button\",\n          closeAction: dismissPopover,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Alright let's set up a couple more.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Once they're added you can share out your roadmap with your team.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this);\n      }\n\n    default:\n      {\n        return null;\n      }\n  }\n}\n\n_s(Tutorial, \"dTdLQul0+G9IxIBh+HfJ0UaEEhc=\", false, function () {\n  return [useTimeout];\n});\n\n_c = Tutorial;\n\nfunction TutorialPopover({\n  selector,\n  closeAction,\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(Popover, {\n    selector: selector,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tutorial-popover\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popover-close-icon\",\n        onClick: closeAction,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), children, /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        onClick: closeAction,\n        children: \"Got it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TutorialPopover;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tutorial\");\n$RefreshReg$(_c2, \"TutorialPopover\");","map":{"version":3,"sources":["/Users/SammySchneider/dev/noa/sammys-interview/productplan-candidate-hw/src/Tutorial.js"],"names":["React","RoadmapContext","Popover","PrimaryButton","useTimeout","FontAwesomeIcon","faTimes","Tutorial","step","setStep","useState","showPopover","setShowPopover","state","useContext","useEffect","lanes","length","some","lane","rows","row","bars","barCount","dismissPopover","useCallback","TutorialPopover","selector","closeAction","children"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { RoadmapContext } from \"./RoadmapState\";\nimport \"./Tutorial.scss\";\nimport { Popover } from \"./Popover\";\nimport { PrimaryButton } from \"./PrimaryButton\";\nimport useTimeout from \"use-timeout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nexport function Tutorial() {\n  const [step, setStep] = React.useState(\"notStarted\");\n  const [showPopover, setShowPopover] = React.useState(true);\n  const { state } = React.useContext(RoadmapContext);\n\n  // Wait two seconds before initiating the tutorial\n  useTimeout(() => {\n    setStep(\"createLane\");\n  }, 2000);\n\n  // Detect when to move to the next step\n  React.useEffect(\n    () => {\n      switch (step) {\n        case \"createLane\": {\n          if (state.lanes.length > 0) {\n            setStep(\"createBar\");\n            setShowPopover(true);\n          }\n          break;\n        }\n        case \"createBar\": {\n          if (\n            state.lanes.some(lane => lane.rows.some(row => row.bars.length > 0))\n          ) {\n            setStep(\"createMoreBars\");\n            setShowPopover(true);\n          }\n          break;\n        }\n        case \"createMoreBars\": {\n          let barCount = 0;\n          for (let lane of state.lanes) {\n            for (let row of lane.rows) {\n              barCount += row.bars.length;\n            }\n          }\n          if (barCount > 2) {\n            setStep(\"done\");\n          }\n          break;\n        }\n        default: {\n        }\n      }\n    },\n    [state.lanes, step]\n  );\n\n  const dismissPopover = React.useCallback(() => {\n    setShowPopover(false);\n  }, []);\n\n  if (!showPopover) {\n    return null;\n  }\n\n  switch (step) {\n    case \"createLane\": {\n      return (\n        <TutorialPopover\n          selector=\".add-lane-button\"\n          closeAction={dismissPopover}\n        >\n          <b>We'll start with a lane.</b>\n          <p>\n            Lanes represent high level categories, such as teams, product lines,\n            or strategic initiatives. Add a color and a description to your lane\n            to communicate valuable details to stakeholders.\n          </p>\n          <p>Drag and drop a lane to get started.</p>\n        </TutorialPopover>\n      );\n    }\n    case \"createBar\": {\n      return (\n        <TutorialPopover\n          selector=\".add-bar-button\"\n          closeAction={dismissPopover}\n        >\n          <b>Awesome! Now lets add a few bars.</b>\n          <p>\n            Bars are your specific initiative. Use them to represent your epics,\n            projects, or tasks, and provide an at a glance view of priority,\n            relationships, and progress.\n          </p>\n          <p>Drag and drop a bar to get started.</p>\n        </TutorialPopover>\n      );\n    }\n    case \"createMoreBars\": {\n      return (\n        <TutorialPopover\n          selector=\".add-bar-button\"\n          closeAction={dismissPopover}\n        >\n          <b>Alright let's set up a couple more.</b>\n          <p>\n            Once they're added you can share out your roadmap with your team.\n          </p>\n        </TutorialPopover>\n      );\n    }\n    default: {\n      return null;\n    }\n  }\n}\n\nfunction TutorialPopover({ selector, closeAction, children }) {\n  return (\n    <Popover selector={selector}>\n      <div className=\"tutorial-popover\">\n        <div className=\"popover-close-icon\" onClick={closeAction}>\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n        {children}\n        <PrimaryButton onClick={closeAction}>Got it</PrimaryButton>\n      </div>\n    </Popover>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}