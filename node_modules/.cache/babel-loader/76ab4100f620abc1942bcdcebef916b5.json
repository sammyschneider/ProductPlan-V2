{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/SammySchneider/dev/ProductPlan/src/CustomDragLayer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport { Types } from \"./DndTypes\";\nimport \"./CustomDragLayer.scss\";\nimport { AddLaneButton, AddBarButton } from \"./SidebarButtons\";\nexport function CustomDragLayer() {\n  _s();\n\n  const {\n    item,\n    itemType,\n    initialOffset,\n    currentOffset,\n    isDragging\n  } = useDragLayer(monitor => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  }));\n\n  function renderItem() {\n    switch (itemType) {\n      case Types.BAR:\n        {\n          // Let existing bars use default HTML5 drag rendering\n          if (item.bar) {\n            return null;\n          }\n\n          return /*#__PURE__*/_jsxDEV(AddBarButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 16\n          }, this);\n        }\n\n      case Types.LANE:\n        {\n          return /*#__PURE__*/_jsxDEV(AddLaneButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 16\n          }, this);\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n  }\n\n  function getItemStyle() {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: \"none\"\n      };\n    }\n\n    let {\n      x,\n      y\n    } = currentOffset;\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n      transform\n    };\n  }\n\n  if (!isDragging) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"custom-drag-layer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: getItemStyle(),\n      children: renderItem()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomDragLayer, \"AU0GkJcIfuRwiaoFjy725Nh//Y4=\", false, function () {\n  return [useDragLayer];\n});\n\n_c = CustomDragLayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDragLayer\");","map":{"version":3,"sources":["/Users/SammySchneider/dev/ProductPlan/src/CustomDragLayer.js"],"names":["React","useDragLayer","Types","AddLaneButton","AddBarButton","CustomDragLayer","item","itemType","initialOffset","currentOffset","isDragging","monitor","getItem","getItemType","getInitialSourceClientOffset","getSourceClientOffset","renderItem","BAR","bar","LANE","getItemStyle","display","x","y","transform"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,wBAAP;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,kBAA5C;AAEA,OAAO,SAASC,eAAT,GAA2B;AAAA;;AAChC,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA;AALI,MAMFT,YAAY,CAACU,OAAO,KAAK;AAC3BL,IAAAA,IAAI,EAAEK,OAAO,CAACC,OAAR,EADqB;AAE3BL,IAAAA,QAAQ,EAAEI,OAAO,CAACE,WAAR,EAFiB;AAG3BL,IAAAA,aAAa,EAAEG,OAAO,CAACG,4BAAR,EAHY;AAI3BL,IAAAA,aAAa,EAAEE,OAAO,CAACI,qBAAR,EAJY;AAK3BL,IAAAA,UAAU,EAAEC,OAAO,CAACD,UAAR;AALe,GAAL,CAAR,CANhB;;AAcA,WAASM,UAAT,GAAsB;AACpB,YAAQT,QAAR;AACE,WAAKL,KAAK,CAACe,GAAX;AAAgB;AACd;AACA,cAAIX,IAAI,CAACY,GAAT,EAAc;AACZ,mBAAO,IAAP;AACD;;AAED,8BAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AACD,WAAKhB,KAAK,CAACiB,IAAX;AAAiB;AACf,8BAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AACD;AAAS;AACP,iBAAO,IAAP;AACD;AAdH;AAgBD;;AAED,WAASC,YAAT,GAAwB;AACtB,QAAI,CAACZ,aAAD,IAAkB,CAACC,aAAvB,EAAsC;AACpC,aAAO;AACLY,QAAAA,OAAO,EAAE;AADJ,OAAP;AAGD;;AAED,QAAI;AAAEC,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAWd,aAAf;AACA,UAAMe,SAAS,GAAI,aAAYF,CAAE,OAAMC,CAAE,KAAzC;AACA,WAAO;AACLC,MAAAA;AADK,KAAP;AAGD;;AAED,MAAI,CAACd,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA,2BACE;AAAK,MAAA,KAAK,EAAEU,YAAY,EAAxB;AAAA,gBAA6BJ,UAAU;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzDeX,e;UAOVJ,Y;;;KAPUI,e","sourcesContent":["import React from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport { Types } from \"./DndTypes\";\nimport \"./CustomDragLayer.scss\";\nimport { AddLaneButton, AddBarButton } from \"./SidebarButtons\";\n\nexport function CustomDragLayer() {\n  const {\n    item,\n    itemType,\n    initialOffset,\n    currentOffset,\n    isDragging\n  } = useDragLayer(monitor => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  }));\n\n  function renderItem() {\n    switch (itemType) {\n      case Types.BAR: {\n        // Let existing bars use default HTML5 drag rendering\n        if (item.bar) {\n          return null;\n        }\n\n        return <AddBarButton />;\n      }\n      case Types.LANE: {\n        return <AddLaneButton />;\n      }\n      default: {\n        return null;\n      }\n    }\n  }\n\n  function getItemStyle() {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: \"none\"\n      };\n    }\n\n    let { x, y } = currentOffset;\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n      transform\n    };\n  }\n\n  if (!isDragging) {\n    return null;\n  }\n\n  return (\n    <div class=\"custom-drag-layer\">\n      <div style={getItemStyle()}>{renderItem()}</div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}