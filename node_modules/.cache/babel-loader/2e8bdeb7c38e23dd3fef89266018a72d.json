{"ast":null,"code":"import { useEffect, useState, useRef } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction index() {\n  var ref = useRef();\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      width = _useState2[0],\n      changeWidth = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      height = _useState4[0],\n      changeHeight = _useState4[1];\n\n  useEffect(function () {\n    var element = ref.current;\n    var resizeObserver = new ResizeObserver(function (entries) {\n      if (!Array.isArray(entries)) {\n        return;\n      } // Since we only observe the one element, we don't need to loop over the\n      // array\n\n\n      if (!entries.length) {\n        return;\n      }\n\n      var entry = entries[0];\n      changeWidth(entry.contentRect.width);\n      changeHeight(entry.contentRect.height);\n    });\n    resizeObserver.observe(element);\n    return function () {\n      return resizeObserver.unobserve(element);\n    };\n  }, []);\n  return [ref, width, height];\n}\n\nexport default index;","map":{"version":3,"sources":["/Users/SammySchneider/dev/noa/sammys-interview/productplan-candidate-hw/node_modules/use-resize-observer/dist/bundle.esm.js"],"names":["useEffect","useState","useRef","ResizeObserver","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","Array","isArray","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","TypeError","index","ref","_useState","_useState2","width","changeWidth","_useState3","_useState4","height","changeHeight","element","current","resizeObserver","entries","entry","contentRect","observe","unobserve"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction index () {\n  var ref = useRef();\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      width = _useState2[0],\n      changeWidth = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      height = _useState4[0],\n      changeHeight = _useState4[1];\n\n  useEffect(function () {\n    var element = ref.current;\n    var resizeObserver = new ResizeObserver(function (entries) {\n      if (!Array.isArray(entries)) {\n        return;\n      } // Since we only observe the one element, we don't need to loop over the\n      // array\n\n\n      if (!entries.length) {\n        return;\n      }\n\n      var entry = entries[0];\n      changeWidth(entry.contentRect.width);\n      changeHeight(entry.contentRect.height);\n    });\n    resizeObserver.observe(element);\n    return function () {\n      return resizeObserver.unobserve(element);\n    };\n  }, []);\n  return [ref, width, height];\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}